<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="main.java.com.xlr.demo.basic.IDao.ClazzMapper" >
  <resultMap id="BaseResultMap" type="com.xlr.demo.bean.Clazz" >
    <id column="c_id" property="cId" jdbcType="INTEGER" />
    <result column="c_name" property="cName" jdbcType="VARCHAR" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    c_id, c_name, teacher_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from class
    where c_id = #{cId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from class
    where c_id = #{cId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xlr.demo.bean.Clazz" >
    insert into class (c_id, c_name, teacher_id
      )
    values (#{cId,jdbcType=INTEGER}, #{cName,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xlr.demo.bean.Clazz" >
    insert into class
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        c_id,
      </if>
      <if test="cName != null" >
        c_name,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cId != null" >
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="cName != null" >
        #{cName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlr.demo.bean.Clazz" >
    update class
    <set >
      <if test="cName != null" >
        c_name = #{cName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlr.demo.bean.Clazz" >
    update class
    set c_name = #{cName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER}
    where c_id = #{cId,jdbcType=INTEGER}
  </update>
    <!--
  方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集
           封装联表查询的数据(去除重复的数据)
      select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=1
  -->
    <select id="getClazzyById" parameterType="int" resultMap="ClassResultMap">
        select * from class c, teacher t where c.teacher_id=t.t_id and c.c_id=#{id}
    </select>
    <!-- 使用resultMap映射实体类和字段之间的一一对应关系 需要各个字段手动映射 -->
    <resultMap type="com.xlr.demo.bean.Clazz" id="ClassResultMap">
        <id property="cId" column="c_id"/>
        <result property="cName" column="c_name"/>
        <association property="teacher" javaType="com.xlr.demo.bean.Teacher">
            <id property="tId" column="t_id"/>
            <result property="tName" column="t_name"/>
            <result property="tAddress" column="t_address"/>
        </association>
    </resultMap>
</mapper>